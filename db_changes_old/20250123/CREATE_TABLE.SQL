
--DROP TABLE MATERIAL_SHIFTING_HISTORY
CREATE TABLE MATERIAL_SHIFTING_HISTORY (
    SHIFTING_SRNO INT IDENTITY(1,1) PRIMARY KEY,
    MATERIAL_SRNO INT NULL, -- Reference to RAW_MATERIALS
    SLITTING_SRNO INT NULL, -- Reference to SLITTING_PROCESSES
    FROM_LOCATION INT NOT NULL,
    TO_LOCATION INT NOT NULL,
    TEMP_FIELD1 VARCHAR(10) NULL,
    TEMP_FIELD2 VARCHAR(10) NULL,
    TEMP_FIELD3 VARCHAR(10) NULL,
    SHIFT_DATE DATETIME NOT NULL DEFAULT GETDATE(),
    SHIFT_REASON VARCHAR(255) NULL,
    CREATED_AT DATETIME NOT NULL DEFAULT GETDATE(),
    CREATED_BY INT NOT NULL,
    MODIFIED_AT DATETIME NULL,
    MODIFIED_BY INT NULL,
    DEL_FLAG BIT NOT NULL DEFAULT 0,
    DEL_AT DATETIME NULL,
    DEL_BY INT NULL,

    -- Foreign Key Constraints
    CONSTRAINT FK_MATERIAL_SHIFT_HISTORY_RAW FOREIGN KEY (MATERIAL_SRNO) REFERENCES RAW_MATERIALS(MATERIAL_SRNO),
    CONSTRAINT FK_MATERIAL_SHIFT_HISTORY_SLIT FOREIGN KEY (SLITTING_SRNO) REFERENCES SLITTING_PROCESSES(SLITTING_SRNO)
);



CREATE PROCEDURE IU_MATERIAL_SHIFT_HISTORY
    @IU_FLAG CHAR(1), -- 'I' for Insert, 'U' for Update
    @MATERIAL_SRNO INT = NULL,
    @SLITTING_SRNO INT = NULL,
    @FROM_LOCATION VARCHAR(100),
    @TO_LOCATION VARCHAR(100),
    @QUANTITY DECIMAL(18, 2),
    @SHIFT_DATE DATETIME,
    @SHIFT_REASON VARCHAR(255) = NULL,
	@SHIFTING_SRNO INT = NULL, -- Required for Update
    @USER_SRNO INT
AS
BEGIN
    SET NOCOUNT ON;

    IF @IU_FLAG = 'I'
    BEGIN
        -- Insert Operation
        INSERT INTO MATERIAL_SHIFTING_HISTORY (
            MATERIAL_SRNO,
            SLITTING_SRNO,
            FROM_LOCATION,
            TO_LOCATION,
            SHIFT_DATE,
            SHIFT_REASON,
            CREATED_AT,
            CREATED_BY,
            DEL_FLAG
        )
        VALUES (
            @MATERIAL_SRNO,
            @SLITTING_SRNO,
            @FROM_LOCATION,
            @TO_LOCATION,
            @SHIFT_DATE,
            @SHIFT_REASON,
            GETDATE(),
            @USER_SRNO,
            0 -- Default DEL_FLAG to 0 (Active)
        );
		SELECT SCOPE_IDENTITY() AS SHIFTING_SRNO
    END
    ELSE IF @IU_FLAG = 'U'
    BEGIN
        -- Update Operation
        UPDATE MATERIAL_SHIFTING_HISTORY
        SET 
            MATERIAL_SRNO = @MATERIAL_SRNO,
            SLITTING_SRNO = @SLITTING_SRNO,
            FROM_LOCATION = @FROM_LOCATION,
            TO_LOCATION = @TO_LOCATION,
            SHIFT_DATE = @SHIFT_DATE,
            SHIFT_REASON = @SHIFT_REASON,
            MODIFIED_AT = GETDATE(),
            MODIFIED_BY = @USER_SRNO
        WHERE 
            SHIFTING_SRNO = @SHIFTING_SRNO AND DEL_FLAG = 0; -- Update only active records

			SELECT @SHIFTING_SRNO AS SHIFTING_SRNO
    END
    ELSE
    BEGIN
        -- Invalid IU_FLAG
        THROW 50001, 'Invalid IU_FLAG. Use "I" for Insert or "U" for Update.', 1;
    END
END;

